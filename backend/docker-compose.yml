version: '3.9'

services:
  db:
    image: postgres:13
    restart: no
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    container_name: db

  adsb:
    build: ./adsb
    restart: no
    container_name: adsb

  ai:
    build: ./ai
    restart: no
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - EMAILS_ENABLED=${EMAILS_ENABLED}
    depends_on:
      - auth
      - redis
    container_name: ai

  api:
    build: ./api
    restart: no
    environment:
      - ADSB_URL=http://adsb:8080
    depends_on:
      - adsb
    container_name: api

  auth:
    build: ./auth
    restart: no
    depends_on:
      - db
    environment:
      - SECRET=${SECRET}
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    container_name: auth

  mapping:
    build: ./mapping
    restart: no
    environment:
      - OSM_API_KEY=${OSM_API_KEY}
    container_name: mapping

  notification:
    build: ./notification
    restart: no
    depends_on:
      - db
    environment:
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_FROM=${SMTP_FROM}
    container_name: notification

  app:
    build: ./app_new
    restart: no
    container_name: app

  nginx:
    build: ./nginx
    restart: no
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - adsb
      - mapping
      - auth
      - api
      - app
      - ai
      - notification
    container_name: nginx

  redis:
    ports:
        - "${REDIS_PORT}:6379"
    image: redis:latest
    container_name: redis

volumes:
  pgdata: